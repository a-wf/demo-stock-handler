openapi: 3.0.0
info:
  title: product-depot-handler
  description: product depot handler service
  version: 1.0.1
  contact:
    email: alex.w.fan16@gmail.com
tags: []
paths:
  /account:
    post:
      summary: create account
      description: 'create an new account'
      tags:
        - account
      security:
        - basicAuth: []
      parameters:
        - name: X-API-KEY
          in: header
          description: API KEY
          required: true
          schema:
            type: string
        - name: X-REQUEST-ID
          in: header
          required: false
          description: Request identifier for debug purpose
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newAccount'
      responses:
        '200':
          description: OK
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newAddedRes'
        401:
          description: Unauthorized
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        403:
          description: Forbidden
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        500:
          description: Internal error
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/{accountId}:
    delete:
      summary: delete account
      description: 'delete account'
      tags:
        - account
      security:
        - basicAuth: []
      parameters:
        - name: X-API-KEY
          in: header
          description: API KEY
          required: true
          schema:
            type: string
        - name: X-REQUEST-ID
          in: header
          required: false
          description: Request identifier for debug purpose
          schema:
            type: string
        - in: path
          name: accountId
          schema:
            type: string
          required: true
          description: Numeric ID of the account to get
      responses:
        '200':
          description: OK
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        401:
          description: Unauthorized
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        403:
          description: Forbidden
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        500:
          description: Internal error
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product:
    post:
      summary: add new product
      tags:
        - product
      security:
        - basicAuth: []
      parameters:
        - name: X-API-KEY
          in: header
          description: API KEY
          required: true
          schema:
            type: string
        - name: X-REQUEST-ID
          in: header
          required: false
          description: Request identifier for debug purpose
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
        required: true
      responses:
        '200':
          description: OK
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newAddedRes'
        401:
          description: Unauthorized
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        403:
          description: Forbidden
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        500:
          description: Internal error
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/{productId}:
    patch:
      summary: increase or decrease amount of a product
      tags:
        - product
      security:
        - basicAuth: []
      parameters:
        - name: X-API-KEY
          in: header
          description: API KEY
          required: true
          schema:
            type: string
        - name: X-REQUEST-ID
          in: header
          required: false
          description: Request identifier for debug purpose
          schema:
            type: string
        - in: path
          name: productId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productStock'
        required: true
      responses:
        '200':
          description: OK
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        401:
          description: Unauthorized
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        403:
          description: Forbidden
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        500:
          description: Internal error
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /action/hold:
    post:
      summary: hold a product
      tags:
        - action
      parameters:
        - name: X-API-KEY
          in: header
          description: API KEY
          required: true
          schema:
            type: string
        - name: X-REQUEST-ID
          in: header
          required: false
          description: Request identifier for debug purpose
          schema:
            type: string
        - in: query
          name: accountId
          schema:
            type: string
          required: true
        - in: query
          name: productId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productStock'
      responses:
        '200':
          description: OK
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        500:
          description: Internal error
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: increase or decrease for taking more or releasing an amount of product
      tags:
        - action
      parameters:
        - name: X-API-KEY
          in: header
          description: API KEY
          required: true
          schema:
            type: string
        - name: X-REQUEST-ID
          in: header
          required: false
          description: Request identifier for debug purpose
          schema:
            type: string
        - in: query
          name: accountId
          schema:
            type: string
          required: true
        - in: query
          name: productId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productStock'
      responses:
        '200':
          description: OK
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        500:
          description: Internal error
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: move holded product out from depot
      tags:
        - action
      parameters:
        - name: X-API-KEY
          in: header
          description: API KEY
          required: true
          schema:
            type: string
        - name: X-REQUEST-ID
          in: header
          required: false
          description: Request identifier for debug purpose
          schema:
            type: string
        - in: query
          name: accountId
          schema:
            type: string
          required: true
        - in: query
          name: productId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            X-REQUEST-ID:
              schema:
                type: string
        500:
          description: Internal error
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /account/{accountId}/products:
    get:
      summary: get account's holded product amount
      tags:
        - account
      parameters:
        - name: X-API-KEY
          in: header
          description: API KEY
          required: true
          schema:
            type: string
        - name: X-REQUEST-ID
          in: header
          required: false
          description: Request identifier for debug purpose
          schema:
            type: string
        - in: path
          name: accountId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productListRes'
        500:
          description: Internal error
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products:
    get:
      summary: list all products
      tags:
        - product
      parameters:
        - name: X-API-KEY
          in: header
          description: API KEY
          required: true
          schema:
            type: string
        - name: X-REQUEST-ID
          in: header
          required: false
          description: Request identifier for debug purpose
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productListRes'
        500:
          description: Internal error
          headers:
            X-REQUEST-ID:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Error:
      type: object
      required:
        - code
      properties:
        code:
          type: integer
          format: int32
        data:
          type: string
      title: Error
    productStock:
      type: object
      required:
        - amount
      properties:
        amount:
          type: number
    product:
      type: object
      required:
        - name
        - amount
      properties:
        name:
          type: string
        amount:
          type: number
    productListRes:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              amount:
                type: number
    newAccount:
      type: object
      required:
        - username
      properties:
        username:
          type: string
          example: Axel
    newAddedRes:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
          properties:
            id:
              type: string
